---
import { getCollection, getEntry, render } from "astro:content";
import Layout from "../../layouts/Layout.astro";

const { slug } = Astro.params;
const article = await getEntry("blog", slug);
if (!article) {
	throw new Error(`Article not found: ${slug}`);
}

export async function getStaticPaths() {
	const articles = await getCollection("blog");
	return articles.map((entry) => ({ params: { slug: entry.id }, props: { article: entry } }));
}

const { Content } = await render(article);
const imgPath = article.data.image ? `/src/content/blog/${slug}/${article.data.image}` : undefined;
---

<Layout 
	title={article.data.title} 
	image={imgPath}
	description={article.data.description} 
	noIndex={!article.data.published} 
	canonical={article.data.canonical ?? undefined} 
	noHeader>
  <article>
    {/** Render markdown as HTML using Astro's set:html directive */}
	  <Content />
		<footer>
			<p>
				Published on <time datetime={article.data.date}>{article.data.date.toLocaleDateString()}</time>
				{article.data.canonical && (
					<>
						{' '}via <a href={article.data.canonical} target="_blank" rel="noopener noreferrer">
							{new URL(article.data.canonical).hostname.replace(/^www\./, '').split('.')[0]}
						</a>
					</>
				)} by <a href="/about" class="author">MichaÃ«l Vanderheyden</a>
			</p>
		</footer>
  </article>
</Layout>
